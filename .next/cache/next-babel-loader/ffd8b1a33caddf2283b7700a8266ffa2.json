{"ast":null,"code":"var _jsxFileName = \"/Users/kharrop/sites/kharrop/website-ts/pages/posts/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { getAllPostIds, getPostData } from '../../lib/posts';\nimport Head from 'next/head';\nimport Date from '../../components/date';\nimport Link from 'next/link';\nimport ReactMarkdown from 'react-markdown';\nexport default function Post({\n  postData\n}) {\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, postData.title)), __jsx(\"article\", {\n    className: \"prose lg:prose-xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, postData.title), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(Date, {\n    dateString: postData.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  })), __jsx(ReactMarkdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, postData.contentHtml)), __jsx(Link, {\n    href: '/posts/',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Next Link\")));\n}\nexport const getStaticPaths = async () => {\n  const paths = getAllPostIds();\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  const postData = await getPostData(params.id);\n  return {\n    props: {\n      postData\n    }\n  };\n};","map":{"version":3,"sources":["/Users/kharrop/sites/kharrop/website-ts/pages/posts/[id].tsx"],"names":["getAllPostIds","getPostData","Head","Date","Link","ReactMarkdown","Post","postData","title","date","contentHtml","getStaticPaths","paths","fallback","getStaticProps","params","id","props"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,WAAxB,QAA2C,iBAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,eAAe,SAASC,IAAT,CAAc;AAC3BC,EAAAA;AAD2B,CAAd,EAQZ;AACD,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,QAAQ,CAACC,KAAjB,CADF,CADF,EAIE;AAAS,IAAA,SAAS,EAAC,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,QAAQ,CAACC,KAAd,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,UAAU,EAAED,QAAQ,CAACE,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAKE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBF,QAAQ,CAACG,WAAzB,CALF,CAJF,EAWE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAXF,CADF;AAiBD;AAED,OAAO,MAAMC,cAA8B,GAAG,YAAY;AACxD,QAAMC,KAAK,GAAGZ,aAAa,EAA3B;AACA,SAAO;AACLY,IAAAA,KADK;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID,CANM;AAQP,OAAO,MAAMC,cAA8B,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAsB;AAClE,QAAMR,QAAQ,GAAG,MAAMN,WAAW,CAACc,MAAM,CAACC,EAAR,CAAlC;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLV,MAAAA;AADK;AADF,GAAP;AAKD,CAPM","sourcesContent":["import { getAllPostIds, getPostData } from '../../lib/posts'\nimport Head from 'next/head'\nimport Date from '../../components/date'\nimport { GetStaticProps, GetStaticPaths } from 'next'\nimport Link from 'next/link'\nimport ReactMarkdown from 'react-markdown'\n\nexport default function Post({\n  postData\n}: {\n  postData: {\n    title: string\n    date: string\n    contentHtml: string\n  }\n}) {\n  return (\n    <>\n      <Head>\n        <title>{postData.title}</title>\n      </Head>\n      <article className=\"prose lg:prose-xl\">\n        <h1>{postData.title}</h1>\n        <div>\n          <Date dateString={postData.date} />\n        </div>\n        <ReactMarkdown>{postData.contentHtml}</ReactMarkdown>\n      </article>\n      <Link href={'/posts/'}>\n        <a>Next Link</a>\n      </Link>\n    </>\n  )\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  const paths = getAllPostIds()\n  return {\n    paths,\n    fallback: false\n  }\n}\n\nexport const getStaticProps: GetStaticProps = async ({ params }) => {\n  const postData = await getPostData(params.id as string)\n  return {\n    props: {\n      postData\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}