{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/kharrop/sites/kharrop/website/pages/blog/2021/its-okay-to-be-wrong.mdx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport BlogPost from '../../../components/blogPost';\nexport var meta = {\n  title: \"It's okay to be wrong\",\n  description: 'How wrong decisions can lead to personal and professional growth',\n  date: 'January 11, 2021',\n  readTime: 5\n};\nvar layoutProps = {\n  meta: meta\n};\n\nvar MDXLayout = function MDXLayout(_ref) {\n  var children = _ref.children;\n  return mdx(BlogPost, {\n    meta: meta,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 37\n    }\n  }, children);\n};\n\n_c = MDXLayout;\nexport default function MDXContent(_ref2) {\n  var components = _ref2.components,\n      props = _objectWithoutProperties(_ref2, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, \"As kids, we're often punished for not knowing the right answers. Take a look at the SAT - if you answer a question incorrectly, you get more points off than simply not answering at all. Inaction is rewarded over a wrong action when trying to solve a problem.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, \"This kind of negative reinforcement can carry over into adulthood where we feel like inaction is a safer option than trying something that could result in a less than ideal outcome.\"), mdx(\"h2\", _extends({\n    \"id\": \"working-with-your-partners\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#working-with-your-partners\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 8\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }\n  }))), \"Working with your partners\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, \"In the software industry, the risk of feeling wrong can result in dysfunctional teams and a lack of trust in our business partners, such as:\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Developers not pushing back on design in case they are wrong about what \\\"good\\\" design is or don't have all the business context\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Designers not asking developers if a design is feasible because it would mean they were wrong about what the platform could support and would have to continue iterating\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Managers worried about not communicating out the right information from their team, which means asking the team to provide that data themselves\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"QA not wanting to ask what they are testing against because they are worried about being wrong about the acceptance criteria\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, \"We need to be asking ourselves: how can we encourage more collaboration and questions, no matter what role or level of experience? By feeling free to admit \", mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 168\n    }\n  }, \"publicly\"), \" when we're wrong, and more importantly... that it's okay.\"), mdx(\"h2\", _extends({\n    \"id\": \"growth-through-shame\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#growth-through-shame\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 8\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }\n  }))), \"Growth through shame\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, \"When we're wrong, we feel ashamed. Our natural instinct is to not repeat the same mistake. The easiest way to protect ourselves is to not even take the risk of being in that situation again. This avoidance tactic tends to backfire though, because the team ends up suffering over all.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, \"If we can embrace being wrong though and working past our emotions, we can begin to start to see how we can grow from these experiences.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, \"Then next time you feel shame through making a wrong decision, keep in mind:\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Awareness of being wrong is a strength\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"You don't learn from always being right\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Others will also be wrong, and now you have an opportunity to teach!\")), mdx(\"h2\", _extends({\n    \"id\": \"codedesign-reviews\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#codedesign-reviews\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 8\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }\n  }))), \"Code/design reviews\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, \"Providing a constructive review is typically the main way people learn that they didn't do something the right way. We tend to take for granted that \\\"best practices\\\" are widely known, but really it depends on how people learned. Consider the following:\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"A professor/bootcamp didn't cover this particular topic\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Best practices can evolve over time\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"A previous company did it a certain way\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Someone that is self-taught hasn't stumbled across that scenario before\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, \"When we take into consideration that not everyone has the same traditional \\\"101\\\" training, reviews are sometimes the first time someone realizes that their method was incorrect. Providing constructive feedback is not only helpful for the person receiving it, but if done publicly (like a GitHub or Figma comment), it can help others learn the lesson at the same time.\"), mdx(\"h3\", _extends({\n    \"id\": \"examples-of-clear-objective-feedback\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#examples-of-clear-objective-feedback\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 8\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 10\n    }\n  }))), \"Examples of clear, objective feedback\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, \"I noticed you used a lot of \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 59\n    }\n  }, \"!important\"), \"s in your CSS, but it's important we avoid these because they can cause issues with specificity between our spreadsheets. You can achieve the same type of behavior by using more specific selectors.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"I see that you're using the \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 59\n    }\n  }, \"tabs\"), \" pattern for navigation on this screen, but our experiences use \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 176\n    }\n  }, \"links\"), \" because they are semantically correct as the user is taken to a different page, versus the content updating below.\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, \"Note that these examples explain \", mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 45\n    }\n  }, \"why\"), \" something is wrong, instead of just explaining what to fix. In doing so, you're not only providing guidance to help others, but also amping up your own credibility.\"), mdx(\"h2\", _extends({\n    \"id\": \"moving-forward-through-uncertainty\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#moving-forward-through-uncertainty\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 8\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 10\n    }\n  }))), \"Moving forward through uncertainty\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, \"At Amazon, Jeff Bezos talks about the concept of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.aboutamazon.com/news/company-news/2016-letter-to-shareholders\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 61\n    }\n  }), \"Day 1 vs Day 2\"), \" companies. One of the main points that stood out to me is that not everyone needs to agree to move forward, but they can still commit. Disagreement doesn't need to result in death to an idea.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, \"What I took away from this is it's okay to move forward in a direction, even though you may think it's the wrong one. We don't learn unless we try. Whether the experiment is a success or a failure, you're left with a guaranteed reward for the effort: data.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, \"If we can agree to commit to solving the problem, versus having everyone on board with the solution, we can set aside our egos and embrace a more open-minded and customer-focused approach.\"), mdx(\"h2\", _extends({\n    \"id\": \"what-helped-me-grow\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#what-helped-me-grow\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 8\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 10\n    }\n  }))), \"What helped me grow\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, \"It's easy to be dismissive of feedback when you think you're always right. What does this person know after all? Doesn't my solution work?\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, \"Just because something works, doesn't mean it can't be improved. This current website is an example of that - yes it technically functions, but there is so much I want to improve. Cleaner implementations, better crafted components. But how do I know there is even something to improve in the first place?\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, \"By being curious. Getting inspired by others. Exploring outside of my bubble and finding what others with different background have crafted. Diversity is so important, because we don't grow in our own echo chambers.\"), mdx(\"h3\", _extends({\n    \"id\": \"questions-i-ask\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#questions-i-ask\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 8\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 10\n    }\n  }))), \"Questions I ask\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, \"How did you know about this approach? (I learn about a new site/resource)\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, \"What makes this method better than mine? (I learn about limitations and how things work)\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  })), mdx(\"h2\", _extends({\n    \"id\": \"wrapping-up\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"tabIndex\": -1,\n    \"href\": \"#wrapping-up\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 8\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"icon icon-link\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 10\n    }\n  }))), \"Wrapping up\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, \"When we start putting down our barriers and take constructive feedback as a gift, we can then truly start to grow and learn from our mistakes. What were you wrong about today? What did you learn?\"));\n}\n_c2 = MDXContent;\n;\nMDXContent.isMDXComponent = true;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MDXLayout\");\n$RefreshReg$(_c2, \"MDXContent\");","map":{"version":3,"sources":["/Users/kharrop/sites/kharrop/website/pages/blog/2021/its-okay-to-be-wrong.mdx"],"names":["React","mdx","BlogPost","meta","title","description","date","readTime","layoutProps","MDXLayout","children","MDXContent","components","props","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport BlogPost from '../../../components/blogPost'\nexport const meta = {\n  title: \"It's okay to be wrong\",\n  description: 'How wrong decisions can lead to personal and professional growth',\n  date: 'January 11, 2021',\n  readTime: 5\n};\n\nconst layoutProps = {\n  meta\n};\nconst MDXLayout = ({ children }) => <BlogPost meta={meta}>{children}</BlogPost>\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`As kids, we're often punished for not knowing the right answers. Take a look at the SAT - if you answer a question incorrectly, you get more points off than simply not answering at all. Inaction is rewarded over a wrong action when trying to solve a problem.`}</p>\n    <p>{`This kind of negative reinforcement can carry over into adulthood where we feel like inaction is a safer option than trying something that could result in a less than ideal outcome.`}</p>\n    <h2 {...{\n      \"id\": \"working-with-your-partners\"\n    }}><a parentName=\"h2\" {...{\n        \"aria-hidden\": \"true\",\n        \"tabIndex\": -1,\n        \"href\": \"#working-with-your-partners\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a>{`Working with your partners`}</h2>\n    <p>{`In the software industry, the risk of feeling wrong can result in dysfunctional teams and a lack of trust in our business partners, such as:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Developers not pushing back on design in case they are wrong about what \"good\" design is or don't have all the business context`}</li>\n      <li parentName=\"ul\">{`Designers not asking developers if a design is feasible because it would mean they were wrong about what the platform could support and would have to continue iterating`}</li>\n      <li parentName=\"ul\">{`Managers worried about not communicating out the right information from their team, which means asking the team to provide that data themselves`}</li>\n      <li parentName=\"ul\">{`QA not wanting to ask what they are testing against because they are worried about being wrong about the acceptance criteria`}</li>\n    </ul>\n    <p>{`We need to be asking ourselves: how can we encourage more collaboration and questions, no matter what role or level of experience? By feeling free to admit `}<strong parentName=\"p\">{`publicly`}</strong>{` when we're wrong, and more importantly... that it's okay.`}</p>\n    <h2 {...{\n      \"id\": \"growth-through-shame\"\n    }}><a parentName=\"h2\" {...{\n        \"aria-hidden\": \"true\",\n        \"tabIndex\": -1,\n        \"href\": \"#growth-through-shame\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a>{`Growth through shame`}</h2>\n    <p>{`When we're wrong, we feel ashamed. Our natural instinct is to not repeat the same mistake. The easiest way to protect ourselves is to not even take the risk of being in that situation again. This avoidance tactic tends to backfire though, because the team ends up suffering over all.`}</p>\n    <p>{`If we can embrace being wrong though and working past our emotions, we can begin to start to see how we can grow from these experiences.`}</p>\n    <p>{`Then next time you feel shame through making a wrong decision, keep in mind:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Awareness of being wrong is a strength`}</li>\n      <li parentName=\"ul\">{`You don't learn from always being right`}</li>\n      <li parentName=\"ul\">{`Others will also be wrong, and now you have an opportunity to teach!`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"codedesign-reviews\"\n    }}><a parentName=\"h2\" {...{\n        \"aria-hidden\": \"true\",\n        \"tabIndex\": -1,\n        \"href\": \"#codedesign-reviews\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a>{`Code/design reviews`}</h2>\n    <p>{`Providing a constructive review is typically the main way people learn that they didn't do something the right way. We tend to take for granted that \"best practices\" are widely known, but really it depends on how people learned. Consider the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A professor/bootcamp didn't cover this particular topic`}</li>\n      <li parentName=\"ul\">{`Best practices can evolve over time`}</li>\n      <li parentName=\"ul\">{`A previous company did it a certain way`}</li>\n      <li parentName=\"ul\">{`Someone that is self-taught hasn't stumbled across that scenario before`}</li>\n    </ul>\n    <p>{`When we take into consideration that not everyone has the same traditional \"101\" training, reviews are sometimes the first time someone realizes that their method was incorrect. Providing constructive feedback is not only helpful for the person receiving it, but if done publicly (like a GitHub or Figma comment), it can help others learn the lesson at the same time.`}</p>\n    <h3 {...{\n      \"id\": \"examples-of-clear-objective-feedback\"\n    }}><a parentName=\"h3\" {...{\n        \"aria-hidden\": \"true\",\n        \"tabIndex\": -1,\n        \"href\": \"#examples-of-clear-objective-feedback\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a>{`Examples of clear, objective feedback`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`I noticed you used a lot of `}<inlineCode parentName=\"li\">{`!important`}</inlineCode>{`s in your CSS, but it's important we avoid these because they can cause issues with specificity between our spreadsheets. You can achieve the same type of behavior by using more specific selectors.`}</li>\n      <li parentName=\"ul\">{`I see that you're using the `}<inlineCode parentName=\"li\">{`tabs`}</inlineCode>{` pattern for navigation on this screen, but our experiences use `}<inlineCode parentName=\"li\">{`links`}</inlineCode>{` because they are semantically correct as the user is taken to a different page, versus the content updating below.`}</li>\n    </ul>\n    <p>{`Note that these examples explain `}<strong parentName=\"p\">{`why`}</strong>{` something is wrong, instead of just explaining what to fix. In doing so, you're not only providing guidance to help others, but also amping up your own credibility.`}</p>\n    <h2 {...{\n      \"id\": \"moving-forward-through-uncertainty\"\n    }}><a parentName=\"h2\" {...{\n        \"aria-hidden\": \"true\",\n        \"tabIndex\": -1,\n        \"href\": \"#moving-forward-through-uncertainty\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a>{`Moving forward through uncertainty`}</h2>\n    <p>{`At Amazon, Jeff Bezos talks about the concept of `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.aboutamazon.com/news/company-news/2016-letter-to-shareholders\"\n      }}>{`Day 1 vs Day 2`}</a>{` companies. One of the main points that stood out to me is that not everyone needs to agree to move forward, but they can still commit. Disagreement doesn't need to result in death to an idea.`}</p>\n    <p>{`What I took away from this is it's okay to move forward in a direction, even though you may think it's the wrong one. We don't learn unless we try. Whether the experiment is a success or a failure, you're left with a guaranteed reward for the effort: data.`}</p>\n    <p>{`If we can agree to commit to solving the problem, versus having everyone on board with the solution, we can set aside our egos and embrace a more open-minded and customer-focused approach.`}</p>\n    <h2 {...{\n      \"id\": \"what-helped-me-grow\"\n    }}><a parentName=\"h2\" {...{\n        \"aria-hidden\": \"true\",\n        \"tabIndex\": -1,\n        \"href\": \"#what-helped-me-grow\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a>{`What helped me grow`}</h2>\n    <p>{`It's easy to be dismissive of feedback when you think you're always right. What does this person know after all? Doesn't my solution work?`}</p>\n    <p>{`Just because something works, doesn't mean it can't be improved. This current website is an example of that - yes it technically functions, but there is so much I want to improve. Cleaner implementations, better crafted components. But how do I know there is even something to improve in the first place?`}</p>\n    <p>{`By being curious. Getting inspired by others. Exploring outside of my bubble and finding what others with different background have crafted. Diversity is so important, because we don't grow in our own echo chambers.`}</p>\n    <h3 {...{\n      \"id\": \"questions-i-ask\"\n    }}><a parentName=\"h3\" {...{\n        \"aria-hidden\": \"true\",\n        \"tabIndex\": -1,\n        \"href\": \"#questions-i-ask\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a>{`Questions I ask`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`How did you know about this approach? (I learn about a new site/resource)`}</li>\n      <li parentName=\"ul\">{`What makes this method better than mine? (I learn about limitations and how things work)`}</li>\n      <li parentName=\"ul\"></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"wrapping-up\"\n    }}><a parentName=\"h2\" {...{\n        \"aria-hidden\": \"true\",\n        \"tabIndex\": -1,\n        \"href\": \"#wrapping-up\"\n      }}><span parentName=\"a\" {...{\n          \"className\": \"icon icon-link\"\n        }}></span></a>{`Wrapping up`}</h2>\n    <p>{`When we start putting down our barriers and take constructive feedback as a gift, we can then truly start to grow and learn from our mistakes. What were you wrong about today? What did you learn?`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}